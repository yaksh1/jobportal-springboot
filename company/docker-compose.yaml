services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: yaksh1
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  config-server:
    image: yaksh1/config-server:latest
    container_name: config-server
    ports:
      - 8085:8085
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  servicereg:
    image: yaksh1/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - postgres
  company :
    image: yaksh1/company:latest
    container_name: company
    ports:
      - 8082:8082
    depends_on:
      - servicereg
      - config-server
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  job:
    image: yaksh1/job:latest
    container_name: job
    ports:
      - 8081:8081
    depends_on:
      - servicereg
      - config-server
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVISEURL_DEFAULTZONE=http://servicereg:8761/eureka
  review:
    image: yaksh1/review:latest
    container_name: review
    ports:
      - 8083:8083
    depends_on:
      - servicereg
      - config-server
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  microservice-network:
    driver: bridge
  postgres:
    driver: bridge

volumes :
  postgres:
  pgadmin: